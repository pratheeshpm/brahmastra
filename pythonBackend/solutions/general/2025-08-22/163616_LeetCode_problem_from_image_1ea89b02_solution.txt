function findMaxSubarraySum(nums) {
    // This function finds the maximum sum of a contiguous subarray using Kadane's Algorithm
    // Initialize variables to track the maximum sum and current sum
    let maxSum = nums[0]; // Start with the first element
    let currentSum = nums[0]; // Start with the first element
    
    // Iterate through the array starting from the second element
    for (let i = 1; i < nums.length; i++) {
        // Update the current sum by including the current element
        // If the current element is greater than the current sum, start a new subarray
        currentSum = Math.max(nums[i], currentSum + nums[i]);
        
        // Update the maximum sum if the current sum is greater
        maxSum = Math.max(maxSum, currentSum);
    }
    
    // Return the maximum sum found
    return maxSum;
}