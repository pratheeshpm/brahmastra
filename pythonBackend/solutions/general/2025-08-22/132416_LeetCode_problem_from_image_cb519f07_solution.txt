function lengthOfLongestSubstring(s) {
    // Initialize a map to store the last index of each character
    const charIndexMap = new Map();
    // Initialize variables to track the maximum length and the start of the current substring
    let maxLength = 0;
    let start = 0;
    
    // Iterate over each character in the string
    for (let i = 0; i < s.length; i++) {
        // If the character is already in the map and its index is within the current substring
        if (charIndexMap.has(s[i]) && charIndexMap.get(s[i]) >= start) {
            // Move the start to the right of the last occurrence of the current character
            start = charIndexMap.get(s[i]) + 1;
        }
        // Update the last index of the current character
        charIndexMap.set(s[i], i);
        // Calculate the length of the current substring and update maxLength if it's the longest so far
        maxLength = Math.max(maxLength, i - start + 1);
    }
    
    // Return the maximum length of substring found
    return maxLength;
}